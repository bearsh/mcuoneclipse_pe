%-Driver generated by the Bean Wizard
%-
%- WARNING !
%-
%- Do not make changes to these lines (if you make some changes, you damage this driver)
%- which begins with:
%-
%-  %-STARTUSERTYPES
%-  %-ENDUSRTYPES
%-  /* END %ModuleName. */
%-  /* MODULE %ModuleName. */
%-  %-INTERNAL_METHOD_BEG
%-  %-INTERNAL_METHOD_END
%-  %-INHERITED_EVENT_BEGIN
%-  %-INHERITED_EVENT_END
%-  %-BW_METHOD_BEGIN
%-  %-BW_METHOD_END
%-  %-BW_DEFINITION_START
%-  %-BW_DEFINITION_END
%-  %-BW_IMPLEMENT_START
%-  %-BW_IMPLEMENT_END
%-  %-BW_EVENT_DEFINITION_START
%-  %-BW_EVENT_DEFINITION_END
%-  %-BW_EVENT_IMPLEMENT_START
%-  %-BW_EVENT_IMPLEMENT_END
%-  %-BW_METHOD_MACROS_START
%-  %-BW_METHOD_MACROS_END
%-  %-BW_SECTIONS_INSERT
%-  %-BW_INTERN_COMMENTS_START
%-  %-BW_INTERN_COMMENTS_END
%-  %-BW_BEAN_CONSTANTS_START
%-  %-BW_BEAN_CONSTANTS_END
%-
%-
%- These lines are not comments, but they are necessary for Bean Wizard
%- If you change these lines, Bean Wizard will not be responsible for loosing or damaging your code!
%-
%-
%- readyCPU ...
%- readyDEVICE ...
%-
%define DriverAuthor  Author
%define DriverVersion 01.00
%define DriverDate    25.09.2009
%-
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-
%-BW_INTERN_COMMENTS_START
%- List of descriptions of internal methods
%define! Description_EventCallback Callback used for widget events
%define! Description_PaintDialogWindow Paints a window with all widgets
%-BW_INTERN_COMMENTS_END
%-
%-BW_SECTIONS_INSERT
%if Language='ANSIC'
%-
%-
%INTERFACE
%define! Settings Common\UIDialogWindowSettings.Inc
%define! Abstract Common\UIDialogWindowAbstract.Inc
%include Common\Header.h

#ifndef __%'ModuleName'_H
#define __%'ModuleName'_H

/* MODULE %ModuleName. */

%ifdef SharedModules
/* Include shared modules, which are used for whole project */
  %for var from IncludeSharedModules
#include "%'var'.h"
  %endfor
%endif
/* Include inherited beans */
%ifdef InhrSymbolList
  %for var from InhrSymbolList
#include "%@%var@ModuleName.h"
  %endfor
%endif
%-BW_CUSTOM_INCLUDE_START_H
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_H
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END

#include "%ProcessorModule.h"

typedef %@UI@'ModuleName'%.PixelColor %'ModuleName'%.PixelColor; %>40/* type large enough to hold the color information */
typedef %@UI@'ModuleName'%.PixelDim %'ModuleName'%.PixelDim;     %>40/* type big enough to hold the x and y coordinates */
typedef %@UI@'ModuleName'%.Screen %'ModuleName'%.Screen;         %>40/* Alias to UserInterface type */
typedef %@UI@'ModuleName'%.Element %'ModuleName'%.Element;       %>40/* Alias to UserInterface type */
typedef %@UI@'ModuleName'%.Coordinate %'ModuleName'%.Coordinate; %>40/* Alias to UserInterface type */
typedef %@UI@'ModuleName'%.EventCallbackKind %'ModuleName'%.EventCallbackKind;%>40/* Alias to UserInterface type */
typedef %@UI@'ModuleName'%.Pvoid %'ModuleName'%.Pvoid;           %>40/* Alias to Pvoid data type */
typedef %@UI@'ModuleName'%.painterCallback %'ModuleName'%.painterCallback;%>40/* Alias to UserInterface type */
typedef %@Window@'ModuleName'%.WindowWidget %'ModuleName'_WindowWidget;%>40/* Alias to window widget type*/

%-STARTUSERTYPES - Do not make changes between lines (included this lines) marked with %-STARTUSERTYPES and %-ENDUSRTYPES

%-ENDUSRTYPES
%-BW_BEAN_CONSTANTS_START  - Do not make changes between lines (included this lines) marked with %-BW_BEAN_CONSTANTS_START and %-BW_BEAN_CONSTANTS_END
%- No constants defined in the BeanWizard for this bean
%-BW_BEAN_CONSTANTS_END
%-BW_CUSTOM_USERTYPE_START
%- Write your own types here ...
%-  Example:
%-    typedef int TMyInteger;




%-
%-BW_CUSTOM_USERTYPE_END


%-BW_DEFINITION_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN GetPixel
%ifdef GetPixel
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%GetPixel %@Display@'ModuleName'%.%GetPixel
%define! Parx
%define! Pary
%define! RetVal
%include Common\UIDialogWindowGetPixel.Inc

%endif %- GetPixel
%-BW_METHOD_END GetPixel
%-************************************************************************************************************
%-BW_METHOD_BEGIN PutPixel
%ifdef PutPixel
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%PutPixel %@Display@'ModuleName'%.%PutPixel
%define! Parx
%define! Pary
%define! Parcolor
%include Common\UIDialogWindowPutPixel.Inc

%endif %- PutPixel
%-BW_METHOD_END PutPixel
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetPixel
%ifdef SetPixel
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%SetPixel %@Display@'ModuleName'%.%SetPixel
%define! Parx
%define! Pary
%include Common\UIDialogWindowSetPixel.Inc

%endif %- SetPixel
%-BW_METHOD_END SetPixel
%-************************************************************************************************************
%-BW_METHOD_BEGIN NegPixel
%ifdef NegPixel
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%NegPixel %@Display@'ModuleName'%.%NegPixel
%define! Parx
%define! Pary
%include Common\UIDialogWindowNegPixel.Inc

%endif %- NegPixel
%-BW_METHOD_END NegPixel
%-************************************************************************************************************
%-BW_METHOD_BEGIN ClrPixel
%ifdef ClrPixel
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%ClrPixel %@Display@'ModuleName'%.%ClrPixel
%define! Parx
%define! Pary
%include Common\UIDialogWindowClrPixel.Inc

%endif %- ClrPixel
%-BW_METHOD_END ClrPixel
%-************************************************************************************************************
%-BW_METHOD_BEGIN Clear
%ifdef Clear
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%Clear %@Display@'ModuleName'%.%Clear
%include Common\UIDialogWindowClear.Inc

%endif %- Clear
%-BW_METHOD_END Clear
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawBox
%ifdef DrawBox
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%DrawBox %@Display@'ModuleName'%.%DrawBox
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! ParlineWidth
%define! Parcolor
%include Common\UIDialogWindowDrawBox.Inc

%endif %- DrawBox
%-BW_METHOD_END DrawBox
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawFilledBox
%ifdef DrawFilledBox
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%DrawFilledBox %@Display@'ModuleName'%.%DrawFilledBox
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! Parcolor
%include Common\UIDialogWindowDrawFilledBox.Inc

%endif %- DrawFilledBox
%-BW_METHOD_END DrawFilledBox
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawHLine
%ifdef DrawHLine
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%DrawHLine %@Display@'ModuleName'%.%DrawHLine
%define! Parx
%define! Pary
%define! Parlength
%define! Parcolor
%include Common\UIDialogWindowDrawHLine.Inc

%endif %- DrawHLine
%-BW_METHOD_END DrawHLine
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawVLine
%ifdef DrawVLine
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%DrawVLine %@Display@'ModuleName'%.%DrawVLine
%define! Parx
%define! Pary
%define! Parlength
%define! Parcolor
%include Common\UIDialogWindowDrawVLine.Inc

%endif %- DrawVLine
%-BW_METHOD_END DrawVLine
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawLine
%ifdef DrawLine
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%DrawLine %@Display@'ModuleName'%.%DrawLine
%define! Parxstart
%define! Parystart
%define! Parxend
%define! Paryend
%define! Parcolor
%include Common\UIDialogWindowDrawLine.Inc

%endif %- DrawLine
%-BW_METHOD_END DrawLine
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawCircle
%ifdef DrawCircle
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%DrawCircle %@Display@'ModuleName'%.%DrawCircle
%define! Parx0
%define! Pary0
%define! Parradius
%define! Parcolor
%include Common\UIDialogWindowDrawCircle.Inc

%endif %- DrawCircle
%-BW_METHOD_END DrawCircle
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawFilledCircle
%ifdef DrawFilledCircle
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%DrawFilledCircle %@Display@'ModuleName'%.%DrawFilledCircle
%define! Parx0
%define! Pary0
%define! Parradius
%define! Parcolor
%include Common\UIDialogWindowDrawFilledCircle.Inc

%endif %- DrawFilledCircle
%-BW_METHOD_END DrawFilledCircle
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawBarChart
%ifdef DrawBarChart
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%DrawBarChart %@Display@'ModuleName'%.%DrawBarChart
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! Pardata
%define! ParnofData
%define! ParbarColor
%define! ParborderWidth
%define! ParborderColor
%define! ParborderSpace
%include Common\UIDialogWindowDrawBarChart.Inc

%endif %- DrawBarChart
%-BW_METHOD_END DrawBarChart
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawMonoBitmap
%ifdef DrawMonoBitmap
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%DrawMonoBitmap %@Display@'ModuleName'%.%DrawMonoBitmap
%define! Parx
%define! Pary
%define! Parimage
%define! ParpixelColor
%define! ParbackgroundColor
%include Common\UIDialogWindowDrawMonoBitmap.Inc

%endif %- DrawMonoBitmap
%-BW_METHOD_END DrawMonoBitmap
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawColorBitmap
%ifdef DrawColorBitmap
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%DrawColorBitmap %@Display@'ModuleName'%.%DrawColorBitmap
%define! Parx
%define! Pary
%define! Parimage
%include Common\UIDialogWindowDrawColorBitmap.Inc

%endif %- DrawColorBitmap
%-BW_METHOD_END DrawColorBitmap
%-************************************************************************************************************
%-BW_METHOD_BEGIN Draw65kBitmap
%ifdef Draw65kBitmap
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%Draw65kBitmap %@Display@'ModuleName'%.%Draw65kBitmap
%define! Parx1
%define! Pary1
%define! Parx2
%define! Pary2
%define! Parbmp
%define! Parcompressed
%include Common\UIDialogWindowDraw65kBitmap.Inc

%endif %- Draw65kBitmap
%-BW_METHOD_END Draw65kBitmap
%-************************************************************************************************************
%-BW_METHOD_BEGIN Draw256BitmapLow
%ifdef Draw256BitmapLow
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%Draw256BitmapLow %@Display@'ModuleName'%.%Draw256BitmapLow
%define! Parx1
%define! Pary1
%define! Parx2
%define! Pary2
%define! Parbmp
%define! Parcompressed
%include Common\UIDialogWindowDraw256BitmapLow.Inc

%endif %- Draw256BitmapLow
%-BW_METHOD_END Draw256BitmapLow
%-************************************************************************************************************
%-BW_METHOD_BEGIN Draw256BitmapHigh
%ifdef Draw256BitmapHigh
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%Draw256BitmapHigh %@Display@'ModuleName'%.%Draw256BitmapHigh
%define! Parx1
%define! Pary1
%define! Parx2
%define! Pary2
%define! Parbmp
%define! ParColorTable
%define! Parcompressed
%include Common\UIDialogWindowDraw256BitmapHigh.Inc

%endif %- Draw256BitmapHigh
%-BW_METHOD_END Draw256BitmapHigh
%-************************************************************************************************************
%-BW_METHOD_BEGIN UpdateFull
%ifdef UpdateFull
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%UpdateFull %@Display@'ModuleName'%.%UpdateFull
%include Common\UIDialogWindowUpdateFull.Inc

%endif %- UpdateFull
%-BW_METHOD_END UpdateFull
%-************************************************************************************************************
%-BW_METHOD_BEGIN UpdateRegion
%ifdef UpdateRegion
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%UpdateRegion %@Display@'ModuleName'%.%UpdateRegion
%define! Parx
%define! Pary
%define! Parw
%define! Parh
%include Common\UIDialogWindowUpdateRegion.Inc

%endif %- UpdateRegion
%-BW_METHOD_END UpdateRegion
%-************************************************************************************************************
%-BW_METHOD_BEGIN GetDisplay
%ifdef GetDisplay
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%GetDisplay %@Display@'ModuleName'%.%GetDisplay
%include Common\UIDialogWindowGetDisplay.Inc

%endif %- GetDisplay
%-BW_METHOD_END GetDisplay
%-************************************************************************************************************
%-BW_METHOD_BEGIN GiveDisplay
%ifdef GiveDisplay
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%GiveDisplay %@Display@'ModuleName'%.%GiveDisplay
%include Common\UIDialogWindowGiveDisplay.Inc

%endif %- GiveDisplay
%-BW_METHOD_END GiveDisplay
%-************************************************************************************************************
%-BW_METHOD_BEGIN Init
%ifdef Init
%-BW_PUBLISH_MACRO
#define %'ModuleName'%.%Init %@Display@'ModuleName'%.%Init
%include Common\UIDialogWindowInit.Inc

%endif %- Init
%-BW_METHOD_END Init
%-************************************************************************************************************
%-BW_METHOD_BEGIN CreateDialogWindow
%ifdef CreateDialogWindow
byte %'ModuleName'%.%CreateDialogWindow(%'ModuleName'_Screen *screen, %'ModuleName'_WindowWidget *window, %'ModuleName'_PixelColor bgColor, %'ModuleName'_PixelDim x, %'ModuleName'_PixelDim y, %'ModuleName'_PixelDim width, %'ModuleName'_PixelDim height);
%define! Parwindow
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! Parscreen
%define! ParbgColor
%define! RetVal
%include Common\UIDialogWindowCreateDialogWindow.Inc

%endif %- CreateDialogWindow
%-BW_METHOD_END CreateDialogWindow
%-************************************************************************************************************
%-************************************************************************************************************
%-************************************************************************************************************
%-************************************************************************************************************
%-************************************************************************************************************
%-************************************************************************************************************
%-************************************************************************************************************
%-BW_METHOD_BEGIN CloseDialogWindow
%ifdef CloseDialogWindow
void %'ModuleName'%.%CloseDialogWindow(%'ModuleName'_Screen *screen, %'ModuleName'_WindowWidget *window);
%define! Parscreen
%define! Parwindow
%include Common\UIDialogWindowCloseDialogWindow.Inc

%endif %- CloseDialogWindow
%-BW_METHOD_END CloseDialogWindow
%-BW_DEFINITION_END
/* END %ModuleName. */

#endif
/* ifndef __%'ModuleName'_H */
%include Common\Header.End
%-
%-BW_EVENT_DEFINITION_START
%-BW_METHOD_BEGIN OnEvent
%ifdef OnEvent
%INTERFACE OnEvent
void %OnEvent(%'ModuleName'_Screen *screen, %'ModuleName'_Window *window, %'ModuleName'_Element *element, %'ModuleName'_EventCallbackKind event);
%define! Parscreen
%define! Parwindow
%define! Parelement
%define! Parevent
%include Common\UIDialogWindowOnEvent.Inc

%endif %- OnEvent
%-BW_METHOD_END OnEvent
%-BW_EVENT_DEFINITION_END
%IMPLEMENTATION
%define! Settings Common\UIDialogWindowSettings.Inc
%define! Abstract Common\UIDialogWindowAbstract.Inc
%include Common\Header.C

/* MODULE %ModuleName. */

%for var from EventModules
#include "%var.h"
%endfor
#include "%'ModuleName'.h"
#include <string.h> /* for memcpy */
%-BW_CUSTOM_INCLUDE_START_M
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_M

%-BW_CUSTOM_VARIABLE_START
%- Write your static variables here
%-   Example:
%-     static int counter1;
%-     int %'ModuleName'%.counter2;
#ifndef NULL
  #define NULL ((void*)0)
#endif

%-
%-BW_CUSTOM_VARIABLE_END
%-BW_INTERN_METHOD_DECL_START
%- List of internal methods headers
%-UNLOCKED
/* Internal method prototypes */
%-INTERNAL_LOC_METHOD_BEG EventCallback
static void EventCallback(%'ModuleName'_Screen *screen, %'ModuleName'_Element *window, %'ModuleName'_Element *element, %'ModuleName'_EventCallbackKind kind, %'ModuleName'_Pvoid pData);
%-INTERNAL_LOC_METHOD_END EventCallback
%-INTERNAL_LOC_METHOD_BEG PaintDialogWindow
static byte PaintDialogWindow(%'ModuleName'_Element *element);
%-INTERNAL_LOC_METHOD_END PaintDialogWindow
%-

%-BW_INTERN_METHOD_DECL_END
%-BW_IMPLEMENT_START
%-************************************************************************************************************
%-INTERNAL_METHOD_BEG EventCallback
%define! Parkind
%define! ParpData
%define! Parelement
%define! Parwindow
%define! Parscreen
%include Common\GeneralInternalGlobal.inc (EventCallback)
static void EventCallback(%'ModuleName'_Screen *screen, %'ModuleName'_Element *window, %'ModuleName'_Element *element, %'ModuleName'_EventCallbackKind kind, %'ModuleName'_Pvoid pData)
{
  %if defined(OnEvent)
  %OnEvent(screen, window, element, kind);                       %>40/* call user event */
  %endif
  (void)element;                                                 %>40/* unused argument */
  (void)window;                                                  %>40/* unused argument */
  (void)pData;                                                   %>40/* unused argument */
  (void)screen;                                                  %>40/* unused argument */
  (void)kind;                                                    %>40/* unused argument */
}
%-INTERNAL_METHOD_END EventCallback
%-************************************************************************************************************
%-BW_METHOD_BEGIN GetPixel
%ifdef GetPixel
%define! Parx
%define! Pary
%define! RetVal
%include Common\UIDialogWindowGetPixel.Inc
/*
%'ModuleName'_PixelColor %'ModuleName'%.%GetPixel(%'FontDisplay'_Color x, %'FontDisplay'_Color y)
  ** This method is implemented as macro
*/

%endif %- GetPixel
%-BW_METHOD_END GetPixel
%-************************************************************************************************************
%-BW_METHOD_BEGIN PutPixel
%ifdef PutPixel
%define! Parx
%define! Pary
%define! Parcolor
%include Common\UIDialogWindowPutPixel.Inc
/*
void %'ModuleName'%.%PutPixel(%'FontDisplay'_Color x, %'FontDisplay'_Color y, %'ModuleName'_PixelDim color)
  ** This method is implemented as macro
*/

%endif %- PutPixel
%-BW_METHOD_END PutPixel
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetPixel
%ifdef SetPixel
%define! Parx
%define! Pary
%include Common\UIDialogWindowSetPixel.Inc
/*
void %'ModuleName'%.%SetPixel(%'FontDisplay'_Color x, %'FontDisplay'_Color y)
  ** This method is implemented as macro
*/

%endif %- SetPixel
%-BW_METHOD_END SetPixel
%-************************************************************************************************************
%-BW_METHOD_BEGIN NegPixel
%ifdef NegPixel
%define! Parx
%define! Pary
%include Common\UIDialogWindowNegPixel.Inc
/*
void %'ModuleName'%.%NegPixel(%'FontDisplay'_Color x, %'FontDisplay'_Color y)
  ** This method is implemented as macro
*/

%endif %- NegPixel
%-BW_METHOD_END NegPixel
%-************************************************************************************************************
%-BW_METHOD_BEGIN ClrPixel
%ifdef ClrPixel
%define! Parx
%define! Pary
%include Common\UIDialogWindowClrPixel.Inc
/*
void %'ModuleName'%.%ClrPixel(%'FontDisplay'_Color x, %'FontDisplay'_Color y)
  ** This method is implemented as macro
*/

%endif %- ClrPixel
%-BW_METHOD_END ClrPixel
%-************************************************************************************************************
%-BW_METHOD_BEGIN Clear
%ifdef Clear
%include Common\UIDialogWindowClear.Inc
/*
void %'ModuleName'%.%Clear(void)
  ** This method is implemented as macro
*/

%endif %- Clear
%-BW_METHOD_END Clear
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawBox
%ifdef DrawBox
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! ParlineWidth
%define! Parcolor
%include Common\UIDialogWindowDrawBox.Inc
/*
void %'ModuleName'%.%DrawBox(%'FontDisplay'_Color x, %'FontDisplay'_Color y, %'FontDisplay'_Color width, %'FontDisplay'_Color height, %'FontDisplay'_Color lineWidth, %'ModuleName'_PixelDim color)
  ** This method is implemented as macro
*/

%endif %- DrawBox
%-BW_METHOD_END DrawBox
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawFilledBox
%ifdef DrawFilledBox
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! Parcolor
%include Common\UIDialogWindowDrawFilledBox.Inc
/*
void %'ModuleName'%.%DrawFilledBox(%'FontDisplay'_Color x, %'FontDisplay'_Color y, %'FontDisplay'_Color width, %'FontDisplay'_Color height, %'ModuleName'_PixelDim color)
  ** This method is implemented as macro
*/

%endif %- DrawFilledBox
%-BW_METHOD_END DrawFilledBox
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawHLine
%ifdef DrawHLine
%define! Parx
%define! Pary
%define! Parlength
%define! Parcolor
%include Common\UIDialogWindowDrawHLine.Inc
/*
void %'ModuleName'%.%DrawHLine(%'FontDisplay'_Color x, %'FontDisplay'_Color y, %'FontDisplay'_Color length, %'ModuleName'_PixelDim color)
  ** This method is implemented as macro
*/

%endif %- DrawHLine
%-BW_METHOD_END DrawHLine
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawVLine
%ifdef DrawVLine
%define! Parx
%define! Pary
%define! Parlength
%define! Parcolor
%include Common\UIDialogWindowDrawVLine.Inc
/*
void %'ModuleName'%.%DrawVLine(%'FontDisplay'_Color x, %'FontDisplay'_Color y, %'FontDisplay'_Color length, %'ModuleName'_PixelDim color)
  ** This method is implemented as macro
*/

%endif %- DrawVLine
%-BW_METHOD_END DrawVLine
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawLine
%ifdef DrawLine
%define! Parxstart
%define! Parystart
%define! Parxend
%define! Paryend
%define! Parcolor
%include Common\UIDialogWindowDrawLine.Inc
/*
void %'ModuleName'%.%DrawLine(%'FontDisplay'_Color xstart, %'FontDisplay'_Color ystart, %'FontDisplay'_Color xend, %'FontDisplay'_Color yend, %'ModuleName'_PixelDim color)
  ** This method is implemented as macro
*/

%endif %- DrawLine
%-BW_METHOD_END DrawLine
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawCircle
%ifdef DrawCircle
%define! Parx0
%define! Pary0
%define! Parradius
%define! Parcolor
%include Common\UIDialogWindowDrawCircle.Inc
/*
void %'ModuleName'%.%DrawCircle(%'FontDisplay'_Color x0, %'FontDisplay'_Color y0, %'FontDisplay'_Color radius, %'ModuleName'_PixelDim color)
  ** This method is implemented as macro
*/

%endif %- DrawCircle
%-BW_METHOD_END DrawCircle
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawFilledCircle
%ifdef DrawFilledCircle
%define! Parx0
%define! Pary0
%define! Parradius
%define! Parcolor
%include Common\UIDialogWindowDrawFilledCircle.Inc
/*
void %'ModuleName'%.%DrawFilledCircle(%'FontDisplay'_Color x0, %'FontDisplay'_Color y0, %'FontDisplay'_Color radius, %'ModuleName'_PixelDim color)
  ** This method is implemented as macro
*/

%endif %- DrawFilledCircle
%-BW_METHOD_END DrawFilledCircle
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawBarChart
%ifdef DrawBarChart
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! Pardata
%define! ParnofData
%define! ParbarColor
%define! ParborderWidth
%define! ParborderColor
%define! ParborderSpace
%include Common\UIDialogWindowDrawBarChart.Inc
/*
void %'ModuleName'%.%DrawBarChart(%'FontDisplay'_Color x, %'FontDisplay'_Color y, %'FontDisplay'_Color width, %'FontDisplay'_Color height, byte *data, byte nofData, %'ModuleName'_PixelDim barColor, byte borderWidth, %'ModuleName'_PixelDim borderColor, byte borderSpace)
  ** This method is implemented as macro
*/

%endif %- DrawBarChart
%-BW_METHOD_END DrawBarChart
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawMonoBitmap
%ifdef DrawMonoBitmap
%define! Parx
%define! Pary
%define! Parimage
%define! ParpixelColor
%define! ParbackgroundColor
%include Common\UIDialogWindowDrawMonoBitmap.Inc
/*
void %'ModuleName'%.%DrawMonoBitmap(%'FontDisplay'_Color x, %'FontDisplay'_Color y, PIMAGE image, %'ModuleName'_PixelDim pixelColor, %'ModuleName'_PixelDim backgroundColor)
  ** This method is implemented as macro
*/

%endif %- DrawMonoBitmap
%-BW_METHOD_END DrawMonoBitmap
%-************************************************************************************************************
%-BW_METHOD_BEGIN DrawColorBitmap
%ifdef DrawColorBitmap
%define! Parx
%define! Pary
%define! Parimage
%include Common\UIDialogWindowDrawColorBitmap.Inc
/*
void %'ModuleName'%.%DrawColorBitmap(%'FontDisplay'_Color x, %'FontDisplay'_Color y, PIMAGE image)
  ** This method is implemented as macro
*/

%endif %- DrawColorBitmap
%-BW_METHOD_END DrawColorBitmap
%-************************************************************************************************************
%-BW_METHOD_BEGIN Draw65kBitmap
%ifdef Draw65kBitmap
%define! Parx1
%define! Pary1
%define! Parx2
%define! Pary2
%define! Parbmp
%define! Parcompressed
%include Common\UIDialogWindowDraw65kBitmap.Inc
/*
void %'ModuleName'%.%Draw65kBitmap(%'FontDisplay'_Color x1, %'FontDisplay'_Color y1, %'FontDisplay'_Color x2, %'FontDisplay'_Color y2, word *bmp, bool compressed)
  ** This method is implemented as macro
*/

%endif %- Draw65kBitmap
%-BW_METHOD_END Draw65kBitmap
%-************************************************************************************************************
%-BW_METHOD_BEGIN Draw256BitmapLow
%ifdef Draw256BitmapLow
%define! Parx1
%define! Pary1
%define! Parx2
%define! Pary2
%define! Parbmp
%define! Parcompressed
%include Common\UIDialogWindowDraw256BitmapLow.Inc
/*
void %'ModuleName'%.%Draw256BitmapLow(%'FontDisplay'_Color x1, %'FontDisplay'_Color y1, %'FontDisplay'_Color x2, %'FontDisplay'_Color y2, byte *bmp, bool compressed)
  ** This method is implemented as macro
*/

%endif %- Draw256BitmapLow
%-BW_METHOD_END Draw256BitmapLow
%-************************************************************************************************************
%-BW_METHOD_BEGIN Draw256BitmapHigh
%ifdef Draw256BitmapHigh
%define! Parx1
%define! Pary1
%define! Parx2
%define! Pary2
%define! Parbmp
%define! ParColorTable
%define! Parcompressed
%include Common\UIDialogWindowDraw256BitmapHigh.Inc
/*
void %'ModuleName'%.%Draw256BitmapHigh(%'FontDisplay'_Color x1, %'FontDisplay'_Color y1, %'FontDisplay'_Color x2, %'FontDisplay'_Color y2, byte *bmp, %'ModuleName'_PixelDim *ColorTable, bool compressed)
  ** This method is implemented as macro
*/

%endif %- Draw256BitmapHigh
%-BW_METHOD_END Draw256BitmapHigh
%-************************************************************************************************************
%-BW_METHOD_BEGIN UpdateFull
%ifdef UpdateFull
%include Common\UIDialogWindowUpdateFull.Inc
/*
void %'ModuleName'%.%UpdateFull(void)
  ** This method is implemented as macro
*/

%endif %- UpdateFull
%-BW_METHOD_END UpdateFull
%-************************************************************************************************************
%-BW_METHOD_BEGIN UpdateRegion
%ifdef UpdateRegion
%define! Parx
%define! Pary
%define! Parw
%define! Parh
%include Common\UIDialogWindowUpdateRegion.Inc
/*
void %'ModuleName'%.%UpdateRegion(%'FontDisplay'_Color x, %'FontDisplay'_Color y, %'FontDisplay'_Color w, %'FontDisplay'_Color h)
  ** This method is implemented as macro
*/

%endif %- UpdateRegion
%-BW_METHOD_END UpdateRegion
%-************************************************************************************************************
%-BW_METHOD_BEGIN GetDisplay
%ifdef GetDisplay
%include Common\UIDialogWindowGetDisplay.Inc
/*
void %'ModuleName'%.%GetDisplay(void)
  ** This method is implemented as macro
*/

%endif %- GetDisplay
%-BW_METHOD_END GetDisplay
%-************************************************************************************************************
%-BW_METHOD_BEGIN GiveDisplay
%ifdef GiveDisplay
%include Common\UIDialogWindowGiveDisplay.Inc
/*
void %'ModuleName'%.%GiveDisplay(void)
  ** This method is implemented as macro
*/

%endif %- GiveDisplay
%-BW_METHOD_END GiveDisplay
%-************************************************************************************************************
%-BW_METHOD_BEGIN Init
%ifdef Init
%include Common\UIDialogWindowInit.Inc
/*
void %'ModuleName'%.%Init(void)
  ** This method is implemented as macro
*/

%endif %- Init
%-BW_METHOD_END Init
%-************************************************************************************************************
%-BW_METHOD_BEGIN CreateDialogWindow
%ifdef CreateDialogWindow
%define! Parwindow
%define! Parx
%define! Pary
%define! Parwidth
%define! Parheight
%define! Parscreen
%define! ParbgColor
%define! RetVal
%include Common\UIDialogWindowCreateDialogWindow.Inc
byte %'ModuleName'%.%CreateDialogWindow(%'ModuleName'_Screen *screen, %'ModuleName'_WindowWidget *window, %'ModuleName'_PixelColor bgColor, %'ModuleName'_PixelDim x, %'ModuleName'_PixelDim y, %'ModuleName'_PixelDim width, %'ModuleName'_PixelDim height)
{
  if (%@Window@'ModuleName'%.Create(screen, window, bgColor, x, y, width, height)!= ERR_OK){
    return ERR_FAILED;
  }
  window->element.eventCallback = EventCallback;                 %>40/* change event callback to dialog */
  window->element.prop.flags |= %@UI@'ModuleName'%.FLAGS_WINDOW_IS_MODAL;%>40/* mark window as modal */
  %@UI@'ModuleName'%.DeselectElement(screen, (%'ModuleName'_Element*)window, screen->selectedE);%>40/* deselect any selcted element */
  screen->selectedE = (%'ModuleName'_Element*)window;            %>40/* select the dialog window */
}

%endif %- CreateDialogWindow
%-BW_METHOD_END CreateDialogWindow
%-************************************************************************************************************
%-INTERNAL_METHOD_BEG PaintDialogWindow
%define! Parelement
%define! RetVal
%include Common\GeneralInternalGlobal.inc (PaintDialogWindow)
static byte PaintDialogWindow(%'ModuleName'_Element *element)
{
  %'ModuleName'_WindowWidget *window= (%'ModuleName'_WindowWidget*)element;
  %@Window@'ModuleName'%.UpdateWindow(window);
  return ERR_OK;
}

%-INTERNAL_METHOD_END PaintDialogWindow
%-************************************************************************************************************
%-BW_METHOD_BEGIN CloseDialogWindow
%ifdef CloseDialogWindow
%define! Parscreen
%define! Parwindow
%include Common\UIDialogWindowCloseDialogWindow.Inc
void %'ModuleName'%.%CloseDialogWindow(%'ModuleName'_Screen *screen, %'ModuleName'_WindowWidget *window)
{
  (void)%@UI@'ModuleName'%.RemoveElement((%'ModuleName'_Element*)window);
  screen->selectedE = NULL;
  //screen->element.prop.flags|=%@UI@'ModuleName'%.FLAGS_NEEDS_REPAINT;%>40/* force complete repaint */
  %@UI@'ModuleName'%.UpdateScreen(screen, TRUE);
}

%endif %- CloseDialogWindow
%-BW_METHOD_END CloseDialogWindow
%-BW_IMPLEMENT_END
/* END %ModuleName. */

%include Common\Header.End
%-
%-
%-BW_EVENT_IMPLEMENT_START
%-BW_METHOD_BEGIN OnEvent
%ifdef OnEvent
%IMPLEMENTATION OnEvent
%define! Parscreen
%define! Parwindow
%define! Parelement
%define! Parevent
%include Common\UIDialogWindowOnEvent.Inc
void %OnEvent(%'ModuleName'_Screen *screen, %'ModuleName'_Window *window, %'ModuleName'_Element *element, %'ModuleName'_EventCallbackKind event)
{
  /* Write your code here ... */
}

%endif %- OnEvent
%-BW_METHOD_END OnEvent
%-BW_EVENT_IMPLEMENT_END
%INITIALIZATION
  /* ### %DeviceType "%DeviceName" init code ... */
%CODE_BEGIN
%CODE_END
%-
%ENABLE
%CODE_BEGIN
%CODE_END
%-
%else %- Language (& Compiler)
  %error^ This bean is not implemented in selected language & compiler !
%endif %- Language (& Compiler)
%DEBUG
%ALL_SYMBOLS
%-
