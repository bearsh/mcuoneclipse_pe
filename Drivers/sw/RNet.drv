%-Driver generated by the Component Wizard
%-
%- WARNING !
%-
%- Do not make changes to these lines (if you make some changes, you damage this driver)
%- which begins with:
%-
%-  %-STARTUSERTYPES
%-  %-ENDUSRTYPES
%-  /* END %ModuleName. */
%-  /* MODULE %ModuleName. */
%-  %-INTERNAL_METHOD_BEG
%-  %-INTERNAL_METHOD_END
%-  %-INHERITED_EVENT_BEGIN
%-  %-INHERITED_EVENT_END
%-  %-BW_METHOD_BEGIN
%-  %-BW_METHOD_END
%-  %-BW_DEFINITION_START
%-  %-BW_DEFINITION_END
%-  %-BW_IMPLEMENT_START
%-  %-BW_IMPLEMENT_END
%-  %-BW_EVENT_DEFINITION_START
%-  %-BW_EVENT_DEFINITION_END
%-  %-BW_EVENT_IMPLEMENT_START
%-  %-BW_EVENT_IMPLEMENT_END
%-  %-BW_METHOD_MACROS_START
%-  %-BW_METHOD_MACROS_END
%-  %-BW_SECTIONS_INSERT
%-  %-BW_INTERN_COMMENTS_START
%-  %-BW_INTERN_COMMENTS_END
%-  %-BW_BEAN_CONSTANTS_START
%-  %-BW_BEAN_CONSTANTS_END
%-
%-
%- These lines are not comments, but they are necessary for Component Wizard
%- If you change these lines, Component Wizard will not be responsible for loosing or damaging your code!
%-
%-
%- readyCPU ...
%- readyDEVICE ...
%-
%include RNet_Files.prg
%-
%define DriverAuthor  Author
%define DriverVersion 01.00
%define DriverDate    14.02.2014
%-
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-
%-BW_INTERN_COMMENTS_START
%- List of descriptions of internal methods
%ifdef nRF24L01p
  %ifdef @nRF24L01p@OnInterrupt
    %define! Description_%@nRF24L01p@OnInterrupt Called in case of an interrupt from the transcevier The event services the event of the inherited component and eventually invokes other events.
  %endif %- @nRF24L01p@OnInterrupt
%endif %- nRF24L01p
%-BW_INTERN_COMMENTS_END
%-
%-BW_SECTIONS_INSERT
%if Language='ANSIC'
%-
%-
%INTERFACE
%define! Settings Common\RNetSettings.Inc
%define! Abstract Common\RNetAbstract.Inc
%include Common\Header.h

#ifndef __%'ModuleName'_H
#define __%'ModuleName'_H

/* MODULE %ModuleName. */

%ifdef SharedModules
/* Include shared modules, which are used for whole project */
  %for var from IncludeSharedModules
#include "%'var'.h"
  %endfor
%endif
/* Include inherited beans */
%ifdef InhrSymbolList
  %for var from InhrSymbolList
#include "%@%var@ModuleName.h"
  %endfor
%endif
%-BW_CUSTOM_INCLUDE_START_H
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_H
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END

#include "%ProcessorModule.h"

%-STARTUSERTYPES - Do not make changes between lines (included this lines) marked with %-STARTUSERTYPES and %-ENDUSRTYPES

%-ENDUSRTYPES
%-BW_BEAN_CONSTANTS_START  - Do not make changes between lines (included this lines) marked with %-BW_BEAN_CONSTANTS_START and %-BW_BEAN_CONSTANTS_END
%- No constants defined in the BeanWizard for this bean
%-BW_BEAN_CONSTANTS_END
%-BW_CUSTOM_USERTYPE_START
%- Write your own types here ...
%-  Example:
%-    typedef int TMyInteger;
%ifdef ParseCommand
#define %'ModuleName'%.PARSE_COMMAND_ENABLED  1  /* set to 1 if method ParseCommand() is present, 0 otherwise */
%else
#define %'ModuleName'%.PARSE_COMMAND_ENABLED  0 /* set to 1 if method ParseCommand() is present, 0 otherwise */
%endif %- ParseCommand
%-
%-BW_CUSTOM_USERTYPE_END
%-BW_DEFINITION_START
%-INHERITED_EVENT_BEGIN nRF24L01p OnInterrupt
%ifdef @nRF24L01p@OnInterrupt
void %@nRF24L01p@OnInterrupt(void);

%endif %- @nRF24L01p@OnInterrupt
%-INHERITED_EVENT_END nRF24L01p OnInterrupt
%-************************************************************************************************************
%-BW_METHOD_BEGIN Init
%ifdef Init
void %'ModuleName'%.%Init(void);
%include Common\RNetInit.Inc

%endif %- Init
%-BW_METHOD_END Init
%-************************************************************************************************************
%-BW_METHOD_BEGIN Deinit
%ifdef Deinit
void %'ModuleName'%.%Deinit(void);
%include Common\RNetDeinit.Inc

%endif %- Deinit
%-BW_METHOD_END Deinit
%-************************************************************************************************************
%-BW_METHOD_BEGIN Process
%ifdef Process
byte %'ModuleName'%.%Process(void);
%define! RetVal
%include Common\RNetProcess.Inc

%endif %- Process
%-BW_METHOD_END Process
%-************************************************************************************************************
%-BW_METHOD_BEGIN PowerUp
%ifdef PowerUp
byte %'ModuleName'%.%PowerUp(void);
%define! RetVal
%include Common\RNetPowerUp.Inc

%endif %- PowerUp
%-BW_METHOD_END PowerUp
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetChannel
%ifdef SetChannel
byte %'ModuleName'%.%SetChannel(byte channel);
%define! Parchannel
%define! RetVal
%include Common\RNetSetChannel.Inc

%endif %- SetChannel
%-BW_METHOD_END SetChannel
%-************************************************************************************************************
%-BW_METHOD_BEGIN SendPayloadDataBlock
%ifdef SendPayloadDataBlock
byte %'ModuleName'%.%SendPayloadDataBlock(uint8_t *appPayload, uint8_t appPayloadSize, uint8_t msgType, RNWK_ShortAddrType dstAddr, RPHY_FlagsType flags);
%define! ParappPayload
%define! ParappPayloadSize
%define! ParmsgType
%define! PardstAddr
%define! Parflags
%define! RetVal
%include Common\RNetSendPayloadDataBlock.Inc

%endif %- SendPayloadDataBlock
%-BW_METHOD_END SendPayloadDataBlock
%-BW_DEFINITION_END
/* END %ModuleName. */

#endif
/* ifndef __%'ModuleName'_H */
%include Common\Header.End
%-
%-BW_EVENT_DEFINITION_START
%-BW_EVENT_DEFINITION_END
%IMPLEMENTATION
%define! Settings Common\RNetSettings.Inc
%define! Abstract Common\RNetAbstract.Inc
%include Common\Header.C

/* MODULE %ModuleName. */

%for var from EventModules
#include "%var.h"
%endfor
#include "%'ModuleName'.h"
%-BW_CUSTOM_INCLUDE_START_M
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
#include "RStack.h"
#include "Radio.h"
%-
%-BW_CUSTOM_INCLUDE_END_M

%-BW_CUSTOM_VARIABLE_START
%- Write your static variables here
%-   Example:
%-     static int counter1;
%-     int %'ModuleName'%.counter2;
%-
%-BW_CUSTOM_VARIABLE_END
%-BW_INTERN_METHOD_DECL_START
%- List of internal methods headers
%-BW_INTERN_METHOD_DECL_END
%-BW_IMPLEMENT_START
%-INHERITED_EVENT_BEGIN nRF24L01p OnInterrupt
%ifdef @nRF24L01p@OnInterrupt
%include Common\GeneralInternal.inc (OnInterrupt)
void %@nRF24L01p@OnInterrupt(void)
{
  /* Write your code here ... */
}

%endif %- @nRF24L01p@OnInterrupt
%-INHERITED_EVENT_END nRF24L01p OnInterrupt
%-************************************************************************************************************
%-BW_METHOD_BEGIN Init
%ifdef Init
%include Common\RNetInit.Inc
void %'ModuleName'%.%Init(void)
{
  RSTACK_Init();
}

%endif %- Init
%-BW_METHOD_END Init
%-************************************************************************************************************
%-BW_METHOD_BEGIN Deinit
%ifdef Deinit
%include Common\RNetDeinit.Inc
void %'ModuleName'%.%Deinit(void)
{
  RSTACK_Deinit();
}

%endif %- Deinit
%-BW_METHOD_END Deinit
%-************************************************************************************************************
%-BW_METHOD_BEGIN Process
%ifdef Process
%define! RetVal
%include Common\RNetProcess.Inc
byte %'ModuleName'%.%Process(void)
{
  return RADIO_Process();
}

%endif %- Process
%-BW_METHOD_END Process
%-************************************************************************************************************
%-BW_METHOD_BEGIN PowerUp
%ifdef PowerUp
%define! RetVal
%include Common\RNetPowerUp.Inc
byte %'ModuleName'%.%PowerUp(void)
{
  return RADIO_PowerUp();
}

%endif %- PowerUp
%-BW_METHOD_END PowerUp
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetChannel
%ifdef SetChannel
%define! Parchannel
%define! RetVal
%include Common\RNetSetChannel.Inc
byte %'ModuleName'%.%SetChannel(byte channel)
{
  return RADIO_SetChannel(channel);
}

%endif %- SetChannel
%-BW_METHOD_END SetChannel
%-************************************************************************************************************
%-BW_METHOD_BEGIN SendPayloadDataBlock
%ifdef SendPayloadDataBlock
%define! ParappPayload
%define! ParappPayloadSize
%define! ParmsgType
%define! PardstAddr
%define! Parflags
%define! RetVal
%include Common\RNetSendPayloadDataBlock.Inc
byte %'ModuleName'%.%SendPayloadDataBlock(uint8_t *appPayload, uint8_t appPayloadSize, uint8_t msgType, RNWK_ShortAddrType dstAddr, RPHY_FlagsType flags)
{
  return RAPP_SendPayloadDataBlock(appPayload, appPayloadSize, msgType, dstAddr, flags);
}

%endif %- SendPayloadDataBlock
%-BW_METHOD_END SendPayloadDataBlock
%-BW_IMPLEMENT_END
/* END %ModuleName. */

%include Common\Header.End
%-
%-
%-BW_EVENT_IMPLEMENT_START
%-BW_EVENT_IMPLEMENT_END
%INITIALIZATION
  /* ### %DeviceType "%DeviceName" init code ... */
%CODE_BEGIN
  /* Write code here ... */
%CODE_END
%-
%ENABLE
%CODE_BEGIN
%CODE_END
%-
%else %- Language (& Compiler)
  %error^ This component is not implemented in selected language & compiler !
%endif %- Language (& Compiler)
%DEBUG
%ALL_SYMBOLS
%-
