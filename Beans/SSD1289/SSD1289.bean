<?xml version="1.0" encoding="UTF-8"?>
<Bean>
  <Header>
    <Name>SSD1289</Name>
    <Description>Display driver for the Solomon Systech SSD1289 display</Description>
    <Author>Erich Styger</Author>
    <Version>01.158</Version>
    <Icon>SSD1289</Icon>
    <TypesFiles>PE,SSD1289\SSD1289</TypesFiles>
    <FileVersion>6</FileVersion>
  </Header>
  <Options>
    <Category>CPU External Devices-Display</Category>
    <BW_HelpType>BasicPlusUsageAppNote</BW_HelpType>
    <BW_HelpFiles>,Properties,Methods,Events,"Typical Usage","Application Notes"</BW_HelpFiles>
    <BW_AutoSaveHelp>yes</BW_AutoSaveHelp>
    <BW_AutoSaveDriver>yes</BW_AutoSaveDriver>
    <BW_DetailedHelp>yes</BW_DetailedHelp>
    <BW_NeedTps>yes</BW_NeedTps>
    <BW_NeedUst>4</BW_NeedUst>
    <BW_NeedCns>0</BW_NeedCns>
    <BeanStatus>PROPOSAL</BeanStatus>
    <Copyright>License : Open Source (LGPL)\nCopyright : (c) Copyright Erich Styger, 2011, all rights reserved.\n\nThis an open source software in the form of a Processor Expert Embedded Component.\nThis is a free software and is opened for education, research and commercial developments under license policy of following terms:\n* This is a free software and there is NO WARRANTY.\n* No restriction on use. You can use, modify and redistribute it for personal, non-profit or commercial product UNDER YOUR RESPONSIBILITY.\n* Redistributions of source code must retain the above copyright notice.</Copyright>
    <Shortcut>LCD</Shortcut>
    <DemoDriver>no</DemoDriver>
    <BeanLevel>Low</BeanLevel>
  </Options>
  <PropertyList>
    <Property>
      <TCompNameItem>
        <Name>Component name</Name>
        <Symbol>DeviceName</Symbol>
        <Hint>Name of the component.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>true</EditLine>
        <DefaultValue/>
      </TCompNameItem>
    </Property>
    <Property>
      <TEnumItem>
        <Name>Orientation</Name>
        <Symbol>Orientation</Symbol>
        <TypeSpec>typeOrientation</TypeSpec>
        <Hint>Orientation of the display.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>true</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>2</DefaultIndex>
        <TextValueIndex>true</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
      </TEnumItem>
    </Property>
    <Property>
      <TIntgItem>
        <Name>Width</Name>
        <Symbol>Width</Symbol>
        <Hint>Width of the display in pixels.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <ReadOnly>true</ReadOnly>
        <EditLine>true</EditLine>
        <DefaultValue>320</DefaultValue>
        <MinValue>0</MinValue>
        <MaxValue>-1</MaxValue>
        <Bases>DEC</Bases>
        <DefaultBase>DEC</DefaultBase>
        <ExtraHintDisabled>false</ExtraHintDisabled>
        <ChangeValueIntoRange>true</ChangeValueIntoRange>
        <RuntimeProperty>false</RuntimeProperty>
      </TIntgItem>
    </Property>
    <Property>
      <TIntgItem>
        <Name>Height</Name>
        <Symbol>Height</Symbol>
        <Hint>The height of the display in pixels.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <ReadOnly>true</ReadOnly>
        <EditLine>true</EditLine>
        <DefaultValue>240</DefaultValue>
        <MinValue>0</MinValue>
        <MaxValue>-1</MaxValue>
        <Bases>DEC</Bases>
        <DefaultBase>DEC</DefaultBase>
        <ExtraHintDisabled>false</ExtraHintDisabled>
        <ChangeValueIntoRange>true</ChangeValueIntoRange>
        <RuntimeProperty>false</RuntimeProperty>
      </TIntgItem>
    </Property>
    <Property>
      <TBoolItem>
        <Name>Bytes in rows</Name>
        <Symbol>BytesInRows</Symbol>
        <TypeSpec>typeYesNo</TypeSpec>
        <Hint>If bytes are organized in rows or columns.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <ReadOnly>true</ReadOnly>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
      </TBoolItem>
    </Property>
    <Property>
      <TBoolItem>
        <Name>Bytes in x direction</Name>
        <Symbol>BytesInXdirection</Symbol>
        <TypeSpec>typeYesNo</TypeSpec>
        <Hint>If bytes are increasing in x direction (from left to right). Otherwise bytes are increasing in y direction (from top to down).</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <ReadOnly>true</ReadOnly>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
      </TBoolItem>
    </Property>
    <Property>
      <TBoolItem>
        <Name>MSB first</Name>
        <Symbol>MSBfirst</Symbol>
        <TypeSpec>typeYesNo</TypeSpec>
        <Hint>If the Most Significant bit/pixel comes first in the byte.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <ReadOnly>true</ReadOnly>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>1</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>false</DefaultValue>
        <Popup>false</Popup>
      </TBoolItem>
    </Property>
    <Property>
      <TIntgItem>
        <Name>Bits per pixel</Name>
        <Symbol>BitsPerPixel</Symbol>
        <Hint>Number of bits per pixel. 1 for B/W displays.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <ReadOnly>true</ReadOnly>
        <EditLine>true</EditLine>
        <DefaultValue>16</DefaultValue>
        <MinValue>0</MinValue>
        <MaxValue>-1</MaxValue>
        <Bases>DEC</Bases>
        <DefaultBase>DEC</DefaultBase>
        <ExtraHintDisabled>false</ExtraHintDisabled>
        <ChangeValueIntoRange>true</ChangeValueIntoRange>
        <RuntimeProperty>false</RuntimeProperty>
      </TIntgItem>
    </Property>
    <Property>
      <TBoolItem>
        <Name>Window capability</Name>
        <Symbol>WindowCapability</Symbol>
        <TypeSpec>typeYesNo</TypeSpec>
        <Hint>If the display is able to use a local window on the device to write data.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <ReadOnly>true</ReadOnly>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
      </TBoolItem>
    </Property>
    <Property>
      <TBoolItem>
        <Name>Display Memory Write</Name>
        <Symbol>DisplayMemoryWrite</Symbol>
        <TypeSpec>typeYesNo</TypeSpec>
        <Hint>If we can directly write into the display memory</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <ReadOnly>true</ReadOnly>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
      </TBoolItem>
    </Property>
    <Property>
      <TBoolItem>
        <Name>Display Memory Read</Name>
        <Symbol>DisplayMemoryRead</Symbol>
        <TypeSpec>typeYesNo</TypeSpec>
        <Hint>If we can read from the display memory. For this you need the RD pin from the display. Note that you cannot read from the display in serial mode.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <ReadOnly>true</ReadOnly>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>1</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>false</DefaultValue>
        <Popup>false</Popup>
      </TBoolItem>
    </Property>
    <Property>
      <TBoolItem>
        <Name>Clear display in init</Name>
        <Symbol>ClearDisplayInInit</Symbol>
        <TypeSpec>typeYesNo</TypeSpec>
        <Hint>If the display driver shall clear the display background during initialization.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
      </TBoolItem>
    </Property>
    <Property>
      <TBoolItem>
        <Name>Initialize on Init</Name>
        <Symbol>InitializeOnInit</Symbol>
        <TypeSpec>typeYesNo</TypeSpec>
        <Hint>If the driver shall be initialized during Init</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
      </TBoolItem>
    </Property>
    <Property>
      <TGrupItem>
        <Name>HW</Name>
        <Symbol>HardwareGroup</Symbol>
        <Hint>Group controlling the hardware settings.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <BoldName>true</BoldName>
        <EditLine>false</EditLine>
        <Description/>
        <Expanded>Yes</Expanded>
        <Children>
          <GrupItem>
            <TBoolGrupItem>
              <Name>Reset</Name>
              <Symbol>ResetPinEnabled</Symbol>
              <TypeSpec>typeEnaDis</TypeSpec>
              <Hint>Enable this group if a normal reset pin can be used. Otherwise you need to fill in the information for a manual reset pin handling</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <BoldName>true</BoldName>
              <EditLine>false</EditLine>
              <Description>Enabled</Description>
              <Expanded>Yes</Expanded>
              <DefaultValue>true</DefaultValue>
              <DefineSymbol>YES_NO</DefineSymbol>
              <IfDisabled>setNOTHING</IfDisabled>
              <Children>
                <GrupItem>
                  <TInhrItem>
                    <Name>Reset</Name>
                    <Symbol>RES</Symbol>
                    <TypeSpec>SSD1289\RES</TypeSpec>
                    <Hint>Display reset signal (low active)</Hint>
                    <ItemLevel>BASIC</ItemLevel>
                    <EditLine>false</EditLine>
                    <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
                    <DefaultIndex>-1</DefaultIndex>
                    <TextValueIndex>false</TextValueIndex>
                    <RuntimeProperty>false</RuntimeProperty>
                    <CanDelete>false</CanDelete>
                    <IconPopup>false</IconPopup>
                    <InhrBeanBaseName>RESpin</InhrBeanBaseName>
                    <ShowInheritedMethodsEventsInPrjTree>true</ShowInheritedMethodsEventsInPrjTree>
                  </TInhrItem>
                </GrupItem>
              </Children>
            </TBoolGrupItem>
          </GrupItem>
          <GrupItem>
            <TStrgListItem>
              <Name>Manual Reset</Name>
              <Symbol>ManualResetList</Symbol>
              <Hint>If the reset pin is disabled, then special macros to handle the LCD Reset can be specified</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>false</EditLine>
              <DefaultValue>(string list)</DefaultValue>
              <DefineList>false</DefineList>
              <ExternEditorEnabled>false</ExternEditorEnabled>
              <AcceptNonPrintChars>false</AcceptNonPrintChars>
              <DefaultStrgList lines_count="5">
                <Line>#if 1 /* enable this for the MCF52259, as we cannot use a normal pin for reset */</Line>
                <Line>  #define RESET_INIT()  /* not needed */</Line>
                <Line>  #define RESET_LOW()   ResetController_RCR |= ResetController_RCR_FRCRSTOUT_BITMASK</Line>
                <Line>  #define RESET_HIGH()  ResetController_RCR &amp;= ~ResetController_RCR_FRCRSTOUT_BITMASK</Line>
                <Line>#endif</Line>
              </DefaultStrgList>
            </TStrgListItem>
          </GrupItem>
          <GrupItem>
            <TBoolGrupItem>
              <Name>Parallel</Name>
              <Symbol>ParallelInterfaceEnabled</Symbol>
              <TypeSpec>typeEnaDis</TypeSpec>
              <Hint>If communication to the LCD is with a parallel interface.</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <BoldName>true</BoldName>
              <EditLine>false</EditLine>
              <Description>Disabled</Description>
              <Expanded>Yes</Expanded>
              <DefaultValue>false</DefaultValue>
              <DefineSymbol>YES_NO</DefineSymbol>
              <IfDisabled>setNOTHING</IfDisabled>
              <Children>
                <GrupItem>
                  <TBoolGrupItem>
                    <Name>mini-FlexBus</Name>
                    <Symbol>MiniFlexBusEnabled</Symbol>
                    <TypeSpec>typeEnaDis</TypeSpec>
                    <Hint>Using the memory bus or mini-FlexBus. Note that you need to enable and configure the Mini-FlexBus in the CPU properties</Hint>
                    <ItemLevel>BASIC</ItemLevel>
                    <BoldName>true</BoldName>
                    <EditLine>false</EditLine>
                    <Description>Enabled</Description>
                    <Expanded>Yes</Expanded>
                    <DefaultValue>true</DefaultValue>
                    <DefineSymbol>YES_NO</DefineSymbol>
                    <IfDisabled>setNOTHING</IfDisabled>
                    <Children>
                      <GrupItem>
                        <TInhrItem>
                          <Name>ALE</Name>
                          <Symbol>ALE</Symbol>
                          <TypeSpec>SSD1289\ALE</TypeSpec>
                          <Hint>Address Latch Enable (ALE) bit of the MiniBus (high active)</Hint>
                          <ItemLevel>BASIC</ItemLevel>
                          <EditLine>false</EditLine>
                          <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
                          <DefaultIndex>-1</DefaultIndex>
                          <TextValueIndex>false</TextValueIndex>
                          <RuntimeProperty>false</RuntimeProperty>
                          <CanDelete>false</CanDelete>
                          <IconPopup>false</IconPopup>
                          <InhrBeanBaseName>ALE</InhrBeanBaseName>
                          <ShowInheritedMethodsEventsInPrjTree>true</ShowInheritedMethodsEventsInPrjTree>
                        </TInhrItem>
                      </GrupItem>
                      <GrupItem>
                        <TIntgItem>
                          <Name>Base Address</Name>
                          <Symbol>FlexBaseAddress</Symbol>
                          <Hint>Specifies the base address to be used. Make sure this corresponds to the Mini-FlexBus settings in the CPU component.</Hint>
                          <ItemLevel>BASIC</ItemLevel>
                          <EditLine>true</EditLine>
                          <DefaultValue>4194304</DefaultValue>
                          <MinValue>0</MinValue>
                          <MaxValue>-1</MaxValue>
                          <Bases>BIN DEC HEX</Bases>
                          <DefaultBase>HEX</DefaultBase>
                          <ExtraHintDisabled>false</ExtraHintDisabled>
                          <ChangeValueIntoRange>false</ChangeValueIntoRange>
                          <RuntimeProperty>false</RuntimeProperty>
                        </TIntgItem>
                      </GrupItem>
                      <GrupItem>
                        <TIntgItem>
                          <Name>D/C Mask</Name>
                          <Symbol>FlexDCMask</Symbol>
                          <Hint>The FlexBus mask bit for the D/C pin to the display. This has to be configured as one of the chip selects in the CPU bean.</Hint>
                          <ItemLevel>BASIC</ItemLevel>
                          <EditLine>true</EditLine>
                          <DefaultValue>65536</DefaultValue>
                          <MinValue>0</MinValue>
                          <MaxValue>-1</MaxValue>
                          <Bases>DEC HEX</Bases>
                          <DefaultBase>HEX</DefaultBase>
                          <ExtraHintDisabled>false</ExtraHintDisabled>
                          <ChangeValueIntoRange>true</ChangeValueIntoRange>
                          <RuntimeProperty>false</RuntimeProperty>
                        </TIntgItem>
                      </GrupItem>
                      <GrupItem>
                        <TBoolItem>
                          <Name>Configured in CPU component</Name>
                          <Symbol>MiniFlexBusConfiguredInCPUBean</Symbol>
                          <TypeSpec>typeYesNo</TypeSpec>
                          <Hint>Normally the Mini-FlexBus is configured in the CPU component. If not, then the driver generates the initialization code.</Hint>
                          <ItemLevel>BASIC</ItemLevel>
                          <EditLine>false</EditLine>
                          <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
                          <DefaultIndex>0</DefaultIndex>
                          <TextValueIndex>false</TextValueIndex>
                          <RuntimeProperty>false</RuntimeProperty>
                          <CanDelete>false</CanDelete>
                          <IconPopup>false</IconPopup>
                          <DefaultValue>true</DefaultValue>
                          <Popup>false</Popup>
                        </TBoolItem>
                      </GrupItem>
                    </Children>
                  </TBoolGrupItem>
                </GrupItem>
              </Children>
            </TBoolGrupItem>
          </GrupItem>
          <GrupItem>
            <TBoolGrupItem>
              <Name>Serial</Name>
              <Symbol>SerialInterfaceEnabled</Symbol>
              <TypeSpec>typeEnaDis</TypeSpec>
              <Hint>If communication with the display is using an SPI bus (D/C, CS, Clock, MOSI). If not using the D/C signal, then a 3-wire protocol is used.</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <ReadOnly>true</ReadOnly>
              <BoldName>true</BoldName>
              <EditLine>false</EditLine>
              <Description>Enabled</Description>
              <Expanded>Yes</Expanded>
              <DefaultValue>true</DefaultValue>
              <DefineSymbol>YES_NO</DefineSymbol>
              <IfDisabled>setNOTHING</IfDisabled>
              <Children>
                <GrupItem>
                  <TInhrItem>
                    <Name>D_C</Name>
                    <Symbol>D_C</Symbol>
                    <TypeSpec>SSD1289\D_C</TypeSpec>
                    <Hint>Data/Command mode select pin. Low level is command mode.</Hint>
                    <ItemLevel>BASIC</ItemLevel>
                    <EditLine>false</EditLine>
                    <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
                    <DefaultIndex>-1</DefaultIndex>
                    <TextValueIndex>false</TextValueIndex>
                    <RuntimeProperty>false</RuntimeProperty>
                    <CanDelete>false</CanDelete>
                    <IconPopup>false</IconPopup>
                    <InhrBeanBaseName>D_Cpin</InhrBeanBaseName>
                    <ShowInheritedMethodsEventsInPrjTree>true</ShowInheritedMethodsEventsInPrjTree>
                  </TInhrItem>
                </GrupItem>
                <GrupItem>
                  <TBoolGrupItem>
                    <Name>Slave Select</Name>
                    <Symbol>SlaveSelectEnabled</Symbol>
                    <TypeSpec>typeEnaDis</TypeSpec>
                    <Hint>if we are directly controlling the slave select pin (chip select)</Hint>
                    <ItemLevel>BASIC</ItemLevel>
                    <BoldName>true</BoldName>
                    <EditLine>false</EditLine>
                    <Description>Enabled</Description>
                    <Expanded>Yes</Expanded>
                    <DefaultValue>true</DefaultValue>
                    <DefineSymbol>YES_NO</DefineSymbol>
                    <IfDisabled>setNOTHING</IfDisabled>
                    <Children>
                      <GrupItem>
                        <TInhrItem>
                          <Name>SCE</Name>
                          <Symbol>SCE</Symbol>
                          <TypeSpec>SSD1289\SCE</TypeSpec>
                          <Hint>SPI Chip Enable/Select signal (low active)</Hint>
                          <ItemLevel>BASIC</ItemLevel>
                          <EditLine>false</EditLine>
                          <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
                          <DefaultIndex>-1</DefaultIndex>
                          <TextValueIndex>false</TextValueIndex>
                          <RuntimeProperty>false</RuntimeProperty>
                          <CanDelete>false</CanDelete>
                          <IconPopup>false</IconPopup>
                          <InhrBeanBaseName>SCEpin</InhrBeanBaseName>
                          <ShowInheritedMethodsEventsInPrjTree>true</ShowInheritedMethodsEventsInPrjTree>
                        </TInhrItem>
                      </GrupItem>
                    </Children>
                  </TBoolGrupItem>
                </GrupItem>
                <GrupItem>
                  <TBoolGrupItem>
                    <Name>HW SPI</Name>
                    <Symbol>HWSPIgroup</Symbol>
                    <TypeSpec>typeEnaDis</TypeSpec>
                    <Hint>This sets up a Hardware SPI communication</Hint>
                    <ItemLevel>BASIC</ItemLevel>
                    <BoldName>true</BoldName>
                    <EditLine>false</EditLine>
                    <Description>Enabled</Description>
                    <Expanded>Yes</Expanded>
                    <DefaultValue>true</DefaultValue>
                    <DefineSymbol>YES_NO</DefineSymbol>
                    <IfDisabled>setNOTHING</IfDisabled>
                    <Children>
                      <GrupItem>
                        <TInhrLinkItem>
                          <Name>HW SPI</Name>
                          <Symbol>HWSPI</Symbol>
                          <TypeSpec>SSD1289\HWSPI</TypeSpec>
                          <Hint>Hardware SPI interface</Hint>
                          <ItemLevel>BASIC</ItemLevel>
                          <EditLine>false</EditLine>
                          <DefaultValue/>
                          <CanDelete>false</CanDelete>
                          <IconPopup>false</IconPopup>
                          <SortStyle/>
                        </TInhrLinkItem>
                      </GrupItem>
                      <GrupItem>
                        <TIntgItem>
                          <Name>Baud Rate Mode</Name>
                          <Symbol>HWSPIBaudRateMode</Symbol>
                          <Hint>If the HW SPI channel is used with different devices and baud rate, this number specifies the baud rate to be used. 0 is the initial baud rate.</Hint>
                          <ItemLevel>BASIC</ItemLevel>
                          <EditLine>true</EditLine>
                          <DefaultValue>0</DefaultValue>
                          <MinValue>0</MinValue>
                          <MaxValue>-1</MaxValue>
                          <Bases>DEC</Bases>
                          <DefaultBase>DEC</DefaultBase>
                          <ExtraHintDisabled>false</ExtraHintDisabled>
                          <ChangeValueIntoRange>false</ChangeValueIntoRange>
                          <RuntimeProperty>false</RuntimeProperty>
                        </TIntgItem>
                      </GrupItem>
                    </Children>
                  </TBoolGrupItem>
                </GrupItem>
                <GrupItem>
                  <TBoolGrupItem>
                    <Name>SW SPI</Name>
                    <Symbol>SWSPIgroup</Symbol>
                    <TypeSpec>typeEnaDis</TypeSpec>
                    <Hint>Group to control the Software SPI.</Hint>
                    <ItemLevel>BASIC</ItemLevel>
                    <ReadOnly>true</ReadOnly>
                    <BoldName>true</BoldName>
                    <EditLine>false</EditLine>
                    <Description>Disabled</Description>
                    <Expanded>No</Expanded>
                    <DefaultValue>false</DefaultValue>
                    <DefineSymbol>YES_NO</DefineSymbol>
                    <IfDisabled>setNOTHING</IfDisabled>
                    <Children>
                      <GrupItem>
                        <TInhrLinkItem>
                          <Name>SW SPI</Name>
                          <Symbol>SWSPI</Symbol>
                          <TypeSpec>SSD1289\SPI</TypeSpec>
                          <Hint>Software SPI interface</Hint>
                          <ItemLevel>BASIC</ItemLevel>
                          <EditLine>false</EditLine>
                          <DefaultValue/>
                          <CanDelete>false</CanDelete>
                          <IconPopup>false</IconPopup>
                          <SortStyle/>
                        </TInhrLinkItem>
                      </GrupItem>
                    </Children>
                  </TBoolGrupItem>
                </GrupItem>
              </Children>
            </TBoolGrupItem>
          </GrupItem>
        </Children>
      </TGrupItem>
    </Property>
    <Property>
      <TGrupItem>
        <Name>System</Name>
        <Symbol>SystemGroup</Symbol>
        <Hint>Group controlling the system settings.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <BoldName>true</BoldName>
        <EditLine>false</EditLine>
        <Description/>
        <Expanded>Yes</Expanded>
        <Children>
          <GrupItem>
            <TInhrLinkItem>
              <Name>Wait</Name>
              <Symbol>Wait</Symbol>
              <TypeSpec>Wait_I</TypeSpec>
              <Hint>Interface for busy waiting.</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>false</EditLine>
              <DefaultValue/>
              <CanDelete>false</CanDelete>
              <IconPopup>false</IconPopup>
              <SortStyle/>
            </TInhrLinkItem>
          </GrupItem>
        </Children>
      </TGrupItem>
    </Property>
  </PropertyList>
  <MethodList>
    <Method>
      <TMthdItem>
        <Name>GetWidth</Name>
        <Symbol>GetWidth</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the width of the display in pixels (in x direction)</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>PixelDim</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>%'ModuleName'_PixelDim #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetHeight</Name>
        <Symbol>GetHeight</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the height of the display in pixels (in y direction)</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>PixelDim</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>%'ModuleName'_PixelDim #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetLongerSide</Name>
        <Symbol>GetLongerSide</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the size of the longer side of the display</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>PixelDim</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>%'ModuleName'_PixelDim #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetShorterSide</Name>
        <Symbol>GetShorterSide</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the size of the shorter side of the display</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>PixelDim</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>%'ModuleName'_PixelDim #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>SetDisplayOrientation</Name>
        <Symbol>SetDisplayOrientation</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Sets the display orienation. If you enable this method, then the orientation of the display can be changed at runtime. However, this requires additional ressources.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>newOrientation</ParName>
          <ParType>DisplayOrientation</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>new orientation to be used</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_DisplayOrientation newOrientation)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetDisplayOrientation</Name>
        <Symbol>GetDisplayOrientation</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Returns the current display orientation</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>DisplayOrientation</ReturnType>
        <RetHint>current display orientation</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>%'ModuleName'_DisplayOrientation #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>ReadDataWord</Name>
        <Symbol>ReadDataWord</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Writes a single word to the bus</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>16bit unsigned</ReturnType>
        <RetHint>data word from the display</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>word #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>WriteDataWord</Name>
        <Symbol>WriteDataWord</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Writes a single word to the bus</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>data</ParName>
          <ParType>16bit unsigned</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Word to send</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(word data)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>WriteCommandWord</Name>
        <Symbol>WriteCommandWord</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Sends a word as command</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>false</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>1</ParamCount>
        <Parameter>
          <ParName>cmd</ParName>
          <ParType>16bit unsigned</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>the command to be sent</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(word cmd)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>WriteCommandData</Name>
        <Symbol>WriteCommandData</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Sends multiple words to the display as commands + data sequence</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>false</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>2</ParamCount>
        <Parameter>
          <ParName>data</ParName>
          <ParType>16bit unsigned</ParType>
          <ParPassing>Address</ParPassing>
          <ParHint>Pointer to the data to write (nofWords of words)</ParHint>
          <ParUserDeclaration>const word* data</ParUserDeclaration>
        </Parameter>
        <Parameter>
          <ParName>nofWords</ParName>
          <ParType>8bit unsigned</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>number of words to send.</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(const word* data, byte nofWords)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>OpenWindow</Name>
        <Symbol>OpenWindow</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Opens a window inside the display we want to write to.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>4</ParamCount>
        <Parameter>
          <ParName>x0</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint/>
        </Parameter>
        <Parameter>
          <ParName>y0</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint/>
        </Parameter>
        <Parameter>
          <ParName>x1</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint/>
        </Parameter>
        <Parameter>
          <ParName>y1</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint/>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_PixelDim x0, %'ModuleName'_PixelDim y0, %'ModuleName'_PixelDim x1, %'ModuleName'_PixelDim y1)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>CloseWindow</Name>
        <Symbol>CloseWindow</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Closes a window previously opened with OpenWindow()</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>Clear</Name>
        <Symbol>Clear</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Clears the whole display memory.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>UpdateFull</Name>
        <Symbol>UpdateFull</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Updates the whole display. This is only a stub for this display as we are using windowing.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>UpdateRegion</Name>
        <Symbol>UpdateRegion</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Updates a region of the display. This is only a stub for this display as we are using windowing.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>4</ParamCount>
        <Parameter>
          <ParName>x</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>x coordinate</ParHint>
        </Parameter>
        <Parameter>
          <ParName>y</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>y coordinate</ParHint>
        </Parameter>
        <Parameter>
          <ParName>w</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>width of the region</ParHint>
        </Parameter>
        <Parameter>
          <ParName>h</ParName>
          <ParType>PixelDim</ParType>
          <ParPassing>Value</ParPassing>
          <ParHint>Height of the region</ParHint>
        </Parameter>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(%'ModuleName'_PixelDim x, %'ModuleName'_PixelDim y, %'ModuleName'_PixelDim w, %'ModuleName'_PixelDim h)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>Init</Name>
        <Symbol>Init</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Display driver initialization</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>InitCommChannel</Name>
        <Symbol>InitCommChannel</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Method to initialize communication to the LCD. Needed if the bus to the LCD is shared with other components and settings are different.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>Error code</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GetLCD</Name>
        <Symbol>GetLCD</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Method to be called for mutual exclusive access to the LCD</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
    <Method>
      <TMthdItem>
        <Name>GiveLCD</Name>
        <Symbol>GiveLCD</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Method to be called for mutual exclusive access to the LCD</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <EditLine>false</EditLine>
        <TypeSpecNameChangeAble>false</TypeSpecNameChangeAble>
        <DefaultIndex>0</DefaultIndex>
        <TextValueIndex>false</TextValueIndex>
        <RuntimeProperty>false</RuntimeProperty>
        <CanDelete>false</CanDelete>
        <IconPopup>false</IconPopup>
        <DefaultValue>true</DefaultValue>
        <Popup>false</Popup>
        <PublicMethod>true</PublicMethod>
        <IsAssembler>false</IsAssembler>
        <InDefinition>true</InDefinition>
        <ReturnType>void</ReturnType>
        <RetHint>none</RetHint>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #M#_#C#(void)</ANSIC>
        </Declarations>
      </TMthdItem>
    </Method>
  </MethodList>
  <EventList>
    <Event>
      <TStrgItem>
        <Name>Event module name</Name>
        <Symbol>EventModule</Symbol>
        <Hint>Name of the user module (without extension), where the events from this component are placed.</Hint>
        <ItemLevel>ADVANCED</ItemLevel>
        <EditLine>true</EditLine>
        <DefaultValue>Events</DefaultValue>
        <StrDefine>nothing</StrDefine>
        <MinLength>0</MinLength>
        <MaxLength>-1</MaxLength>
      </TStrgItem>
    </Event>
    <Event>
      <TEvntItem>
        <Name>OnGetLCD</Name>
        <Symbol>OnGetLCD</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Event called in the event of GetLCD() method called.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <BoldName>true</BoldName>
        <EditLine>false</EditLine>
        <Description>don't generate code</Description>
        <Expanded>No</Expanded>
        <DefaultValue>false</DefaultValue>
        <DefineSymbol>YES_NO</DefineSymbol>
        <IfDisabled>setNOTHING</IfDisabled>
        <IsAssembler>false</IsAssembler>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #C#(void)</ANSIC>
        </Declarations>
        <Children>
          <GrupItem>
            <TEvntName>
              <Name>Event procedure name</Name>
              <Symbol>Name</Symbol>
              <Hint>OnGetLCD procedure name</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>true</EditLine>
              <DefaultValue/>
              <StrDefine>nothing</StrDefine>
              <MinLength>0</MinLength>
              <MaxLength>-1</MaxLength>
              <ErrorIfNotSet>true</ErrorIfNotSet>
              <IdentType>EVNT</IdentType>
            </TEvntName>
          </GrupItem>
        </Children>
      </TEvntItem>
    </Event>
    <Event>
      <TEvntItem>
        <Name>OnGiveLCD</Name>
        <Symbol>OnGiveLCD</Symbol>
        <TypeSpec>typeMethod</TypeSpec>
        <Hint>Event called in the event of GiveLCD() method called.</Hint>
        <ItemLevel>BASIC</ItemLevel>
        <BoldName>true</BoldName>
        <EditLine>false</EditLine>
        <Description>don't generate code</Description>
        <Expanded>No</Expanded>
        <DefaultValue>false</DefaultValue>
        <DefineSymbol>YES_NO</DefineSymbol>
        <IfDisabled>setNOTHING</IfDisabled>
        <IsAssembler>false</IsAssembler>
        <ParamCount>0</ParamCount>
        <Scope>PRIVATE</Scope>
        <Declarations>
          <ANSIC>void #C#(void)</ANSIC>
        </Declarations>
        <Children>
          <GrupItem>
            <TEvntName>
              <Name>Event procedure name</Name>
              <Symbol>Name</Symbol>
              <Hint>OnGiveLCD procedure name</Hint>
              <ItemLevel>BASIC</ItemLevel>
              <EditLine>true</EditLine>
              <DefaultValue/>
              <StrDefine>nothing</StrDefine>
              <MinLength>0</MinLength>
              <MaxLength>-1</MaxLength>
              <ErrorIfNotSet>true</ErrorIfNotSet>
              <IdentType>EVNT</IdentType>
            </TEvntName>
          </GrupItem>
        </Children>
      </TEvntItem>
    </Event>
  </EventList>
  <Links>
    <EmptySection_DummyValue/>
  </Links>
  <Revisions>
    <RevisionVersion>2</RevisionVersion>
  </Revisions>
</Bean>
