%set FreeRTOSVersion Value V7.4.2+
%set FreeRTOSVersion ExtraText V7.4.2+
%if (CPUfamily = "ColdFireV1")
  %set ColdFireV1CPUSpecific ReadOnly no
  %set ColdFireV1CPUSpecific Value Enabled
  %set ColdFireV2CPUSpecific ReadOnly yes
  %set ColdFireV2CPUSpecific Value Disabled
  %set KinetisCPUSpecific ReadOnly yes
  %set KinetisCPUSpecific Value Disabled
%elif (CPUfamily = "MCF")
  %set ColdFireV1CPUSpecific ReadOnly yes
  %set ColdFireV1CPUSpecific Value Disabled
  %set ColdFireV2CPUSpecific ReadOnly no
  %set ColdFireV2CPUSpecific Value Enabled
  %set KinetisCPUSpecific ReadOnly yes
  %set KinetisCPUSpecific Value Disabled
%elif (CPUfamily = "Kinetis")
  %set ColdFireV1CPUSpecific ReadOnly yes
  %set ColdFireV1CPUSpecific Value Disabled
  %set ColdFireV2CPUSpecific ReadOnly yes
  %set ColdFireV2CPUSpecific Value Disabled
  %set KinetisCPUSpecific ReadOnly no
  %set KinetisCPUSpecific Value Enabled
%else %- S08
  %set ColdFireV1CPUSpecific ReadOnly yes
  %set ColdFireV1CPUSpecific Value Disabled
  %set ColdFireV2CPUSpecific ReadOnly yes
  %set ColdFireV2CPUSpecific Value Disabled
  %set KinetisCPUSpecific ReadOnly yes
  %set KinetisCPUSpecific Value Disabled
%endif
%- only Kinetis has Low Level Drivers
%if (CPUfamily = "Kinetis")
  %set LDDTickGroup Value Enabled
  %set LDDTickGroup ReadOnly yes
  %set LDDSWIGroup Value Enabled
  %set LDDSWIGroup ReadOnly yes
  %set LDDRuntimeCounterGroup Value Enabled
  %set LDDRuntimeCounterGroup ReadOnly yes
  %set NonLDDTickGroup Value Disabled
  %set NonLDDTickGroup ReadOnly yes
  %set NonLDDSWIGroup Value Disabled
  %set NonLDDSWIGroup ReadOnly yes
  %set NonLDDRuntimeCounterGroup Value Disabled
  %set NonLDDRuntimeCounterGroup ReadOnly yes
%else
  %set LDDTickGroup Value Disabled
  %set LDDTickGroup ReadOnly yes
  %set LDDSWIGroup Value Disabled
  %set LDDSWIGroup ReadOnly yes
  %set LDDRuntimeCounterGroup Value Disabled
  %set LDDRuntimeCounterGroup ReadOnly yes
  %set NonLDDTickGroup Value Enabled
  %set NonLDDTickGroup ReadOnly yes
  %set NonLDDSWIGroup Value Enabled
  %set NonLDDSWIGroup ReadOnly yes
  %set NonLDDRuntimeCounterGroup Value Enabled
  %set NonLDDRuntimeCounterGroup ReadOnly yes
%endif
%if Compiler = 'CodeWarriorARM'
  %set CompilerOptimizationLevel ReadOnly no
%else %- not applicable for GCC
  %set CompilerOptimizationLevel ReadOnly yes
%endif
%if UseTraceFacility='yes'
  %set vTaskList Selection always
%else
  %set vTaskList Selection never
%endif
%if CollectRuntimeStatisticsGroup='yes'
  %set vTaskGetRunTimeStats Selection always
%else
  %set vTaskGetRunTimeStats Selection never
%endif
%if %UseRecursiveMutexes='yes'
  %set xSemaphoreTakeRecursive Selection always
  %set xSemaphoreGiveRecursive Selection always
  %set xSemaphoreCreateRecursiveMutex Selection always
%else
  %set xSemaphoreTakeRecursive Selection never
  %set xSemaphoreGiveRecursive Selection never
  %set xSemaphoreCreateRecursiveMutex Selection never
%endif
%if %UseApplicationTaskTags='yes'
  %set vTaskSetApplicationTaskTag Selection always
  %set xTaskGetApplicationTaskTag Selection always
  %set xTaskCallApplicationTaskHook Selection always
%else
  %set vTaskSetApplicationTaskTag Selection never
  %set xTaskGetApplicationTaskTag Selection never
  %set xTaskCallApplicationTaskHook Selection never
%endif
%if %UseTraceHooksGroup='yes'
  %set UseTraceFacility Value yes
%endif

%if (CPUfamily = "Kinetis")
  %if %CPUDB_prph_has_feature(CPU,ARM_CORTEX_M0P) = 'yes'
    %set ARMFamilyType Value "M0+"
  %else %- M4 or M4F core
  %- somehow the code below does NOT work???
  %-  %if %CPUDB_prph_has_feature(CPU, FPU) = 'no'
  %-    %set ARMFamilyType Value "M4"
  %-    %warning M4
  %-  %else
  %-    %set ARMFamilyType Value "M4F"
  %-    %warning M4F
  %-  %endif
  %endif
  %- %set ARMFamilyType ReadOnly no
  %- %set ARMFamilyType Value Enabled
  %if ARMFamilyType="M0+"
    %- M0+ does not have floating point unit
    %set M4FFloatingPointSupport Value no
    %set M4FFloatingPointSupport ReadOnly yes
    %set ARMLowestInterrutpPriority Value 3
  %elif ARMFamilyType="M4F"
    %- M4F does have floating point unit
    %- %set M4FFloatingPointSupport Value yes
    %set M4FFloatingPointSupport ReadOnly no
    %set ARMLowestInterrutpPriority Value 15
  %else %- M4
    %set M4FFloatingPointSupport Value no
    %set M4FFloatingPointSupport ReadOnly yes
    %set ARMLowestInterrutpPriority Value 15
  %endif
  %if %@TickTimerLDD@MainModule != "SysTick"
    %error FreeRTOS Tick Timer: Only SysTick/SYST_CVR is supported, but %@TickTimerLDD@MainModule is used! Please use SysTick/SYST_CVR for ARM/Kinetis.
  %endif
  %if KinetisLibraryLowestInterruptPriority >. ARMLowestInterrutpPriority
    %error "Library Lowest Interrupt Priority (%KinetisLibraryLowestInterruptPriority) is larger than Lowest Interrupt Priority (%ARMLowestInterrutpPriority). Priority shall be <= %ARMLowestInterrutpPriority."
  %endif
  %if KinetisLibraryMaxInterruptPriority >. KinetisLibraryLowestInterruptPriority
    %error "Max SysCall Interrupt Priority (%KinetisLibraryMaxInterruptPriority) is larger than Lowest Interrupt Priority (%KinetisLibraryLowestInterruptPriority). Priority shall be <= %KinetisLibraryLowestInterruptPriority."
  %endif
%endif
%ifndef Shell
  %set ParseCommand Selection never
%else
  %set ParseCommand Selection always
%endif
%if %TicklessIdleModeEnabled='yes'
  %set vOnPreSleepProcessing Selection always
  %set vOnPostSleepProcessing Selection enable
%else
  %set vOnPreSleepProcessing Selection never
  %set vOnPostSleepProcessing Selection never
%endif
